/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.cmc.gateway.domain.model.impl;

import com.cmc.gateway.domain.model.ProvisioningMessage;
import com.cmc.gateway.domain.model.ProvisioningMessageModel;
import com.cmc.gateway.domain.model.ProvisioningMessageSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ProvisioningMessage service. Represents a row in the &quot;GW_ProvisioningMessage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.cmc.gateway.domain.model.ProvisioningMessageModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProvisioningMessageImpl}.
 * </p>
 *
 * @author Richard Nguyen
 * @see ProvisioningMessageImpl
 * @see com.cmc.gateway.domain.model.ProvisioningMessage
 * @see com.cmc.gateway.domain.model.ProvisioningMessageModel
 * @generated
 */
@JSON(strict = true)
public class ProvisioningMessageModelImpl extends BaseModelImpl<ProvisioningMessage>
	implements ProvisioningMessageModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a provisioning message model instance should use the {@link com.cmc.gateway.domain.model.ProvisioningMessage} interface instead.
	 */
	public static final String TABLE_NAME = "GW_ProvisioningMessage";
	public static final Object[][] TABLE_COLUMNS = {
			{ "messageId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "provisioningId", Types.BIGINT },
			{ "responseCode", Types.VARCHAR },
			{ "cause", Types.VARCHAR },
			{ "causeValue", Types.INTEGER },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table GW_ProvisioningMessage (messageId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,provisioningId LONG,responseCode VARCHAR(75) null,cause VARCHAR(75) null,causeValue INTEGER,description STRING null)";
	public static final String TABLE_SQL_DROP = "drop table GW_ProvisioningMessage";
	public static final String ORDER_BY_JPQL = " ORDER BY provisioningMessage.provisioningId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY GW_ProvisioningMessage.provisioningId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.cmc.gateway.domain.model.ProvisioningMessage"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.cmc.gateway.domain.model.ProvisioningMessage"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.cmc.gateway.domain.model.ProvisioningMessage"),
			true);
	public static long PROVISIONINGID_COLUMN_BITMASK = 1L;
	public static long RESPONSECODE_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ProvisioningMessage toModel(ProvisioningMessageSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ProvisioningMessage model = new ProvisioningMessageImpl();

		model.setMessageId(soapModel.getMessageId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setProvisioningId(soapModel.getProvisioningId());
		model.setResponseCode(soapModel.getResponseCode());
		model.setCause(soapModel.getCause());
		model.setCauseValue(soapModel.getCauseValue());
		model.setDescription(soapModel.getDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ProvisioningMessage> toModels(
		ProvisioningMessageSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ProvisioningMessage> models = new ArrayList<ProvisioningMessage>(soapModels.length);

		for (ProvisioningMessageSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.cmc.gateway.domain.model.ProvisioningMessage"));

	public ProvisioningMessageModelImpl() {
	}

	public long getPrimaryKey() {
		return _messageId;
	}

	public void setPrimaryKey(long primaryKey) {
		setMessageId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_messageId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return ProvisioningMessage.class;
	}

	public String getModelClassName() {
		return ProvisioningMessage.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("messageId", getMessageId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("provisioningId", getProvisioningId());
		attributes.put("responseCode", getResponseCode());
		attributes.put("cause", getCause());
		attributes.put("causeValue", getCauseValue());
		attributes.put("description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long messageId = (Long)attributes.get("messageId");

		if (messageId != null) {
			setMessageId(messageId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long provisioningId = (Long)attributes.get("provisioningId");

		if (provisioningId != null) {
			setProvisioningId(provisioningId);
		}

		String responseCode = (String)attributes.get("responseCode");

		if (responseCode != null) {
			setResponseCode(responseCode);
		}

		String cause = (String)attributes.get("cause");

		if (cause != null) {
			setCause(cause);
		}

		Integer causeValue = (Integer)attributes.get("causeValue");

		if (causeValue != null) {
			setCauseValue(causeValue);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@JSON
	public long getMessageId() {
		return _messageId;
	}

	public void setMessageId(long messageId) {
		_messageId = messageId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public long getProvisioningId() {
		return _provisioningId;
	}

	public void setProvisioningId(long provisioningId) {
		_columnBitmask = -1L;

		if (!_setOriginalProvisioningId) {
			_setOriginalProvisioningId = true;

			_originalProvisioningId = _provisioningId;
		}

		_provisioningId = provisioningId;
	}

	public long getOriginalProvisioningId() {
		return _originalProvisioningId;
	}

	@JSON
	public String getResponseCode() {
		if (_responseCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _responseCode;
		}
	}

	public void setResponseCode(String responseCode) {
		_columnBitmask |= RESPONSECODE_COLUMN_BITMASK;

		if (_originalResponseCode == null) {
			_originalResponseCode = _responseCode;
		}

		_responseCode = responseCode;
	}

	public String getOriginalResponseCode() {
		return GetterUtil.getString(_originalResponseCode);
	}

	@JSON
	public String getCause() {
		if (_cause == null) {
			return StringPool.BLANK;
		}
		else {
			return _cause;
		}
	}

	public void setCause(String cause) {
		_cause = cause;
	}

	@JSON
	public int getCauseValue() {
		return _causeValue;
	}

	public void setCauseValue(int causeValue) {
		_causeValue = causeValue;
	}

	@JSON
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ProvisioningMessage.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProvisioningMessage toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (ProvisioningMessage)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		ProvisioningMessageImpl provisioningMessageImpl = new ProvisioningMessageImpl();

		provisioningMessageImpl.setMessageId(getMessageId());
		provisioningMessageImpl.setGroupId(getGroupId());
		provisioningMessageImpl.setCompanyId(getCompanyId());
		provisioningMessageImpl.setUserId(getUserId());
		provisioningMessageImpl.setCreateDate(getCreateDate());
		provisioningMessageImpl.setModifiedDate(getModifiedDate());
		provisioningMessageImpl.setProvisioningId(getProvisioningId());
		provisioningMessageImpl.setResponseCode(getResponseCode());
		provisioningMessageImpl.setCause(getCause());
		provisioningMessageImpl.setCauseValue(getCauseValue());
		provisioningMessageImpl.setDescription(getDescription());

		provisioningMessageImpl.resetOriginalValues();

		return provisioningMessageImpl;
	}

	public int compareTo(ProvisioningMessage provisioningMessage) {
		int value = 0;

		if (getProvisioningId() < provisioningMessage.getProvisioningId()) {
			value = -1;
		}
		else if (getProvisioningId() > provisioningMessage.getProvisioningId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		ProvisioningMessage provisioningMessage = null;

		try {
			provisioningMessage = (ProvisioningMessage)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = provisioningMessage.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ProvisioningMessageModelImpl provisioningMessageModelImpl = this;

		provisioningMessageModelImpl._originalProvisioningId = provisioningMessageModelImpl._provisioningId;

		provisioningMessageModelImpl._setOriginalProvisioningId = false;

		provisioningMessageModelImpl._originalResponseCode = provisioningMessageModelImpl._responseCode;

		provisioningMessageModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ProvisioningMessage> toCacheModel() {
		ProvisioningMessageCacheModel provisioningMessageCacheModel = new ProvisioningMessageCacheModel();

		provisioningMessageCacheModel.messageId = getMessageId();

		provisioningMessageCacheModel.groupId = getGroupId();

		provisioningMessageCacheModel.companyId = getCompanyId();

		provisioningMessageCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			provisioningMessageCacheModel.createDate = createDate.getTime();
		}
		else {
			provisioningMessageCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			provisioningMessageCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			provisioningMessageCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		provisioningMessageCacheModel.provisioningId = getProvisioningId();

		provisioningMessageCacheModel.responseCode = getResponseCode();

		String responseCode = provisioningMessageCacheModel.responseCode;

		if ((responseCode != null) && (responseCode.length() == 0)) {
			provisioningMessageCacheModel.responseCode = null;
		}

		provisioningMessageCacheModel.cause = getCause();

		String cause = provisioningMessageCacheModel.cause;

		if ((cause != null) && (cause.length() == 0)) {
			provisioningMessageCacheModel.cause = null;
		}

		provisioningMessageCacheModel.causeValue = getCauseValue();

		provisioningMessageCacheModel.description = getDescription();

		String description = provisioningMessageCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			provisioningMessageCacheModel.description = null;
		}

		return provisioningMessageCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{messageId=");
		sb.append(getMessageId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", provisioningId=");
		sb.append(getProvisioningId());
		sb.append(", responseCode=");
		sb.append(getResponseCode());
		sb.append(", cause=");
		sb.append(getCause());
		sb.append(", causeValue=");
		sb.append(getCauseValue());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.cmc.gateway.domain.model.ProvisioningMessage");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>messageId</column-name><column-value><![CDATA[");
		sb.append(getMessageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>provisioningId</column-name><column-value><![CDATA[");
		sb.append(getProvisioningId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>responseCode</column-name><column-value><![CDATA[");
		sb.append(getResponseCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cause</column-name><column-value><![CDATA[");
		sb.append(getCause());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>causeValue</column-name><column-value><![CDATA[");
		sb.append(getCauseValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ProvisioningMessage.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			ProvisioningMessage.class
		};
	private long _messageId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private long _provisioningId;
	private long _originalProvisioningId;
	private boolean _setOriginalProvisioningId;
	private String _responseCode;
	private String _originalResponseCode;
	private String _cause;
	private int _causeValue;
	private String _description;
	private long _columnBitmask;
	private ProvisioningMessage _escapedModelProxy;
}